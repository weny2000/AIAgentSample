{
  "name": "ai-agent-system",
  "version": "1.0.0",
  "description": "AI Agent system for team leader digital twin functionality",
  "type": "module",
  "private": true,
  "workspaces": [
    "frontend",
    "backend",
    "infrastructure"
  ],
  "scripts": {
    "install:all": "npm install && npm install --workspaces",
    "dev": "npm run dev --workspace=frontend",
    "build": "npm run build --workspaces",
    "test": "npm run test --workspaces",
    "lint": "npm run lint --workspaces",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "npm run type-check --workspaces",
    "deploy:infrastructure:staging": "chmod +x scripts/deploy-infrastructure.sh && ./scripts/deploy-infrastructure.sh staging",
    "deploy:infrastructure:production": "chmod +x scripts/deploy-infrastructure.sh && ./scripts/deploy-infrastructure.sh production",
    "deploy:backend:staging": "chmod +x scripts/deploy-backend.sh && ./scripts/deploy-backend.sh staging",
    "deploy:backend:production": "chmod +x scripts/deploy-backend.sh && ./scripts/deploy-backend.sh production",
    "deploy:frontend:staging": "chmod +x scripts/deploy-frontend.sh && ./scripts/deploy-frontend.sh staging",
    "deploy:frontend:production": "chmod +x scripts/deploy-frontend.sh && ./scripts/deploy-frontend.sh production",
    "deploy:staging": "npm run deploy:infrastructure:staging && npm run deploy:backend:staging && npm run deploy:frontend:staging",
    "deploy:production": "npm run deploy:infrastructure:production && npm run deploy:backend:production && npm run deploy:frontend:production",
    "deploy:full:dev": "chmod +x scripts/deploy-full-stack.sh && ./scripts/deploy-full-stack.sh dev",
    "deploy:full:staging": "chmod +x scripts/deploy-full-stack.sh && ./scripts/deploy-full-stack.sh staging",
    "deploy:full:production": "chmod +x scripts/deploy-full-stack.sh && ./scripts/deploy-full-stack.sh production",
    "deploy:full:dev:dry-run": "DRY_RUN=true npm run deploy:full:dev",
    "deploy:full:staging:dry-run": "DRY_RUN=true npm run deploy:full:staging",
    "deploy:full:production:dry-run": "DRY_RUN=true npm run deploy:full:production",
    "deploy:blue-green:staging": "BLUE_GREEN=true npm run deploy:full:staging",
    "deploy:blue-green:production": "BLUE_GREEN=true npm run deploy:full:production",
    "rollback:staging": "chmod +x scripts/rollback.sh && ./scripts/rollback.sh staging",
    "rollback:production": "chmod +x scripts/rollback.sh && ./scripts/rollback.sh production",
    "config:deploy:dev": "cd infrastructure && npm run config:deploy dev ../config/dev.json",
    "config:deploy:staging": "cd infrastructure && npm run config:deploy staging ../config/staging.json",
    "config:deploy:production": "cd infrastructure && npm run config:deploy production ../config/production.json",
    "config:validate:dev": "cd infrastructure && npm run config:validate dev ../config/dev.json",
    "config:validate:staging": "cd infrastructure && npm run config:validate staging ../config/staging.json",
    "config:validate:production": "cd infrastructure && npm run config:validate production ../config/production.json",
    "migrate:dev": "cd infrastructure && npm run migrate:dev",
    "migrate:staging": "cd infrastructure && npm run migrate:staging",
    "migrate:production": "cd infrastructure && npm run migrate:production",
    "migrate:dry-run": "cd infrastructure && npm run migrate:dry-run",
    "health-check:staging": "curl -f https://staging.ai-agent.com/health",
    "health-check:production": "curl -f https://ai-agent.com/health",
    "compliance:check": "echo 'Running compliance checks...' && npm run lint && npm run test",
    "security:scan": "npm audit --audit-level=high",
    "test:smoke:staging": "node scripts/integration-test-suite.js staging",
    "test:smoke:production": "node scripts/integration-test-suite.js production",
    "test:e2e:staging": "node scripts/integration-test-suite.js staging",
    "test:e2e:production": "node scripts/integration-test-suite.js production",
    "test:performance:staging": "node scripts/performance-optimizer.js staging",
    "test:performance:production": "node scripts/performance-optimizer.js production",
    "test:security:staging": "node scripts/security-validator.js staging",
    "test:security:production": "node scripts/security-validator.js production",
    "test:integration:staging": "node scripts/system-integration-orchestrator.js staging",
    "test:integration:production": "node scripts/system-integration-orchestrator.js production",
    "test:integration:full": "npm run test:integration:staging && npm run test:integration:production",
    "optimize:performance": "node scripts/performance-optimizer.js",
    "validate:security": "node scripts/security-validator.js",
    "validate:system": "node scripts/system-integration-orchestrator.js"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "axios": "^1.6.0",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-react": "^7.33.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.3",
    "prettier": "^3.0.0",
    "typescript": "^5.0.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}
