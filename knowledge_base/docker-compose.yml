services:
  # PostgreSQL for state management (internal only)
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: knowledge_base
      POSTGRES_USER: kb_user
      POSTGRES_PASSWORD: kb_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - knowledge-base-internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kb_user -d knowledge_base"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis for task queue (internal only)
  redis:
    image: redis:8-alpine
    volumes:
      - redis_data:/data
    networks:
      - knowledge-base-internal
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # RAG Knowledge Base API (public interface)
  knowledge-base:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - VECTOR_DB_PATH=/app/data/chroma_db
      - STORAGE_PATH=/app/data/storage
      - DATABASE_URL=postgresql://kb_user:kb_password@postgres:5432/knowledge_base
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - ./logs:/app/logs
    networks:
      - knowledge-base-internal
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  knowledge-base-internal:
    driver: bridge
    internal: false
    name: knowledge-base-network