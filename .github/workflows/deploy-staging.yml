name: Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'
  ENVIRONMENT: 'staging'

jobs:
  deploy-infrastructure:
    name: Deploy Infrastructure to Staging
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_STAGING }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          npm ci
          cd infrastructure && npm ci

      - name: CDK Bootstrap (if needed)
        run: cd infrastructure && npx cdk bootstrap --context environment=${{ env.ENVIRONMENT }}

      - name: CDK Deploy
        run: cd infrastructure && npx cdk deploy --all --require-approval never --context environment=${{ env.ENVIRONMENT }}

      - name: Output deployment info
        run: |
          cd infrastructure
          npx cdk list --context environment=${{ env.ENVIRONMENT }}

  deploy-backend:
    name: Deploy Backend to Staging
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    environment: staging
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_STAGING }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Build backend
        run: cd backend && npm run build

      - name: Deploy Lambda functions
        run: cd backend && npm run deploy:staging

      - name: Run database migrations
        run: cd backend && npm run migrate:staging

  deploy-frontend:
    name: Deploy Frontend to Staging
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    environment: staging
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_STAGING }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci

      - name: Build frontend
        run: cd frontend && npm run build:staging
        env:
          VITE_API_URL: ${{ secrets.STAGING_API_URL }}
          VITE_COGNITO_USER_POOL_ID: ${{ secrets.STAGING_COGNITO_USER_POOL_ID }}
          VITE_COGNITO_CLIENT_ID: ${{ secrets.STAGING_COGNITO_CLIENT_ID }}

      - name: Deploy to S3
        run: |
          aws s3 sync frontend/dist/ s3://${{ secrets.STAGING_S3_BUCKET }}/ --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.STAGING_CLOUDFRONT_ID }} --paths "/*"

  smoke-tests:
    name: Run Smoke Tests
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run smoke tests
        run: npm run test:smoke:staging
        env:
          STAGING_API_URL: ${{ secrets.STAGING_API_URL }}
          STAGING_FRONTEND_URL: ${{ secrets.STAGING_FRONTEND_URL }}