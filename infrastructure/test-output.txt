
> ai-agent-infrastructure@1.0.0 test
> jest tagging-aspect.test.ts

  console.warn
    [WARNING] aws-cdk-lib.aws_stepfunctions.StateMachineProps#definition is deprecated.
      use definitionBody: DefinitionBody.fromChainable()
      This API will be removed in the next major release.

    [0m [90m 294 |[39m   describe([32m'Step Functions tagging'[39m[33m,[39m () [33m=>[39m {
     [90m 295 |[39m     it([32m'should apply Step Functions tags'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 296 |[39m       [36mnew[39m stepfunctions[33m.[39m[33mStateMachine[39m(stack[33m,[39m [32m'IngestionWorkflow'[39m[33m,[39m {
     [90m     |[39m       [31m[1m^[22m[39m
     [90m 297 |[39m         definition[33m:[39m stepfunctions[33m.[39m[33mChain[39m[33m.[39mstart(
     [90m 298 |[39m           [36mnew[39m stepfunctions[33m.[39m[33mPass[39m(stack[33m,[39m [32m'PassState'[39m)
     [90m 299 |[39m         )[33m,[39m[0m

      at print (../node_modules/aws-cdk-lib/.warnings.jsii.js:9:146)
      at Object.aws_cdk_lib_aws_stepfunctions_StateMachineProps (../node_modules/aws-cdk-lib/.warnings.jsii.js:6:269283)
      at new StateMachine2 (../node_modules/aws-cdk-lib/aws-stepfunctions/lib/state-machine.js:1:6101)
      at new StateMachine2 (../node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:590)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:296:7)

  console.warn
    [WARNING] aws-cdk-lib.aws_stepfunctions.StateMachineProps#definition is deprecated.
      use definitionBody: DefinitionBody.fromChainable()
      This API will be removed in the next major release.

    [0m [90m 294 |[39m   describe([32m'Step Functions tagging'[39m[33m,[39m () [33m=>[39m {
     [90m 295 |[39m     it([32m'should apply Step Functions tags'[39m[33m,[39m () [33m=>[39m {
    [31m[1m>[22m[39m[90m 296 |[39m       [36mnew[39m stepfunctions[33m.[39m[33mStateMachine[39m(stack[33m,[39m [32m'IngestionWorkflow'[39m[33m,[39m {
     [90m     |[39m       [31m[1m^[22m[39m
     [90m 297 |[39m         definition[33m:[39m stepfunctions[33m.[39m[33mChain[39m[33m.[39mstart(
     [90m 298 |[39m           [36mnew[39m stepfunctions[33m.[39m[33mPass[39m(stack[33m,[39m [32m'PassState'[39m)
     [90m 299 |[39m         )[33m,[39m[0m

      at print (../node_modules/aws-cdk-lib/.warnings.jsii.js:9:146)
      at Object.aws_cdk_lib_aws_stepfunctions_StateMachineProps (../node_modules/aws-cdk-lib/.warnings.jsii.js:6:269283)
      at ChainDefinitionBody.bind (../node_modules/aws-cdk-lib/aws-stepfunctions/lib/state-machine.js:1:14852)
      at new StateMachine2 (../node_modules/aws-cdk-lib/aws-stepfunctions/lib/state-machine.js:1:8772)
      at new StateMachine2 (../node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:590)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:296:7)

npm : FAIL src/aspects/__tests__/tagging-aspect.test.ts (8.438 s)
At line:1 char:50
+ ... ple\infrastructure" ; npm test -- tagging-aspect.test.ts 2>&1 | Out-F ...
+                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (FAIL src/aspect...st.ts (8.438 s) 
   :String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
  TaggingAspect
    visit method
      ﾃ・should traverse construct tree and apply tags (2051 ms)
      竏・should not tag the same resource twice (11 ms)
      竏・should skip unknown resource types (15 ms)
    Lambda function tagging
      ﾃ・should apply Lambda-specific tags (152 ms)
      ﾃ・should derive function purpose from name (179 ms)
    DynamoDB table tagging
      ﾃ・should apply DynamoDB-specific tags (257 ms)
      ﾃ・should derive table purpose from name (136 ms)
    S3 bucket tagging
      ﾃ・should apply S3-specific tags (161 ms)
      ﾃ・should derive bucket purpose from name (142 ms)
    VPC and network resource tagging
      竏・should apply VPC tags (550 ms)
      竏・should apply NetworkTier tags to subnets (302 ms)
      竏・should apply tags to security groups (380 ms)
    API Gateway tagging
      ﾃ・should apply API Gateway tags (367 ms)
    Step Functions tagging
      ﾃ・should apply Step Functions tags (430 ms)
    CloudWatch resource tagging
      竏・should apply tags to log groups (139 ms)
      ﾃ・should handle Lambda log groups specially (124 ms)
    KMS key tagging
      ﾃ・should apply KMS tags (140 ms)
    Cognito resource tagging
      ﾃ・should apply Cognito User Pool tags (15 ms)
    IAM resource tagging
      ﾃ・should apply basic tags to IAM roles (94 ms)
    special case handling
      竏・should handle resources with non-standard tagging (73 ms)
      ﾃ・should handle Lambda log groups with associated resource tag (104 ms)
    environment-specific tags
      ﾃ・should apply dev environment tags (247 ms)
      ﾃ・should apply production environment tags (127 ms)
    utility methods
      竏・should track tagged resources (124 ms)
      竏・should reset tagged resources (7 ms)
    tag propagation
      竏・should apply tags to all resources in a complex stack (142 ms)

  笳・TaggingAspect 窶ｺ visit method 窶ｺ should traverse construct tree and apply t
ags

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::Lambda::Function, but none match 
as expected.
    The 1 closest matches:
    TestFunction22AD90FC :: {
      "DependsOn": [ "TestFunctionServiceRole6ABD93C7" ],
      "Properties": {
        "Code": { "ZipFile": "exports.handler = async () => {};" },
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt": [ "TestFunctionServiceRole6ABD93C7", "Arn" ] },
        "Runtime": "nodejs18.x",
        "Tags": [
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Project",
            "Value": "AiAgentSystem"
          },
    !!     Could not match arrayWith pattern 1. This is the closest match
          {
    !!       Expected ManagedBy but received Runtime
            "Key": "Runtime",
    !!       Expected CDK but received nodejs18.x
            "Value": "nodejs18.x"
          },
          { ... }
        ]
      },
      "Type": "AWS::Lambda::Function"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 52 |[39m
     [90m 53 |[39m       [90m// Verify Lambda function has tags[39m
    [31m[1m>[22m[39m[90m 54 |[39m       template[33m.[39mhasResourcePro
perties([32m'AWS::Lambda::Function'[39m[33m,[39m {
     [90m    |[39m                [31m[1m^[22m[39m
     [90m 55 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[3
9marrayWith([
     [90m 56 |[39m           { [33mKey[39m[33m:[39m [32m'Project'[39m[
33m,[39m [33mValue[39m[33m:[39m [32m'AiAgentSystem'[39m }[33m,[39m
     [90m 57 |[39m           { [33mKey[39m[33m:[39m [32m'ManagedBy'[39m
[33m,[39m [33mValue[39m[33m:[39m [32m'CDK'[39m }[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:54:16
)

  笳・TaggingAspect 窶ｺ Lambda function tagging 窶ｺ should apply Lambda-specific ta
gs

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::Lambda::Function, but none match 
as expected.
    The 1 closest matches:
    ApiHandler5E7490E8 :: {
      "DependsOn": [ "ApiHandlerServiceRole592E70E9" ],
      "Properties": {
        "Code": { "ZipFile": "exports.handler = async () => {};" },
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt": [ "ApiHandlerServiceRole592E70E9", "Arn" ] },
        "Runtime": "nodejs18.x",
        "Tags": [
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Component",
            "Value": "Compute-Lambda"
          },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     Could not match arrayWith pattern 1. This is the closest match
          {
            "Key": "FunctionPurpose",
    !!       Expected API but received General
            "Value": "General"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... }
        ]
      },
      "Type": "AWS::Lambda::Function"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 112 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 113 |[39m
    [31m[1m>[22m[39m[90m 114 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::Lambda::Function'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 115 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 116 |[39m           { [33mKey[39m[33m:[39m [32m'Component'[39
m[33m,[39m [33mValue[39m[33m:[39m [32m'Compute-Lambda'[39m }[33m,[39m
     [90m 117 |[39m           { [33mKey[39m[33m:[39m [32m'FunctionPurpos
e'[39m[33m,[39m [33mValue[39m[33m:[39m [32m'API'[39m }[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:114:1
6)

  笳・TaggingAspect 窶ｺ Lambda function tagging 窶ｺ should derive function purpose 
from name

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::Lambda::Function, but none match 
as expected.
    The 1 closest matches:
    AuthenticationHandler389AF3E2 :: {
      "DependsOn": [ "AuthenticationHandlerServiceRoleDC58C2D8" ],
      "Properties": {
        "Code": { "ZipFile": "def handler(event, context): pass" },
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt": [ "AuthenticationHandlerServiceRoleDC58C2D8", "
Arn" ] },
        "Runtime": "python3.11",
        "Tags": [
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     Could not match arrayWith pattern 0. This is the closest match
          {
            "Key": "FunctionPurpose",
    !!       Expected Authentication but received General
            "Value": "General"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... }
        ]
      },
      "Type": "AWS::Lambda::Function"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 131 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 132 |[39m
    [31m[1m>[22m[39m[90m 133 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::Lambda::Function'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 134 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 135 |[39m           { [33mKey[39m[33m:[39m [32m'FunctionPurpos
e'[39m[33m,[39m [33mValue[39m[33m:[39m [32m'Authentication'[39m }[33m
,[39m
     [90m 136 |[39m         ])[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:133:1
6)

  笳・TaggingAspect 窶ｺ DynamoDB table tagging 窶ｺ should apply DynamoDB-specific t
ags

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::DynamoDB::Table, but none match a
s expected.
    The 1 closest matches:
    TeamRosterTableBE14EE7E :: {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [ { ... } ],
        "KeySchema": [ { ... } ],
        "ProvisionedThroughput": { ... },
        "Tags": [
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Component",
            "Value": "Database-DynamoDB"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     Could not match arrayWith pattern 1. This is the closest match
          {
            "Key": "TablePurpose",
    !!       Expected TeamManagement but received General
            "Value": "General"
          }
        ]
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 148 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 149 |[39m
    [31m[1m>[22m[39m[90m 150 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::DynamoDB::Table'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 151 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 152 |[39m           { [33mKey[39m[33m:[39m [32m'Component'[39
m[33m,[39m [33mValue[39m[33m:[39m [32m'Database-DynamoDB'[39m }[33m,[
39m
     [90m 153 |[39m           { [33mKey[39m[33m:[39m [32m'TablePurpose'
[39m[33m,[39m [33mValue[39m[33m:[39m [32m'TeamManagement'[39m }[33m,[
39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:150:1
6)

  笳・TaggingAspect 窶ｺ DynamoDB table tagging 窶ｺ should derive table purpose from
 name

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::DynamoDB::Table, but none match a
s expected.
    The 1 closest matches:
    AuditLogTable8B03E3C8 :: {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [ { ... } ],
        "KeySchema": [ { ... } ],
        "ProvisionedThroughput": { ... },
        "Tags": [
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     Could not match arrayWith pattern 0. This is the closest match
          {
            "Key": "TablePurpose",
    !!       Expected AuditLog but received General
            "Value": "General"
          }
        ]
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 165 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 166 |[39m
    [31m[1m>[22m[39m[90m 167 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::DynamoDB::Table'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 168 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 169 |[39m           { [33mKey[39m[33m:[39m [32m'TablePurpose'
[39m[33m,[39m [33mValue[39m[33m:[39m [32m'AuditLog'[39m }[33m,[39m
     [90m 170 |[39m         ])[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:167:1
6)

  笳・TaggingAspect 窶ｺ S3 bucket tagging 窶ｺ should apply S3-specific tags

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::S3::Bucket, but none match as exp
ected.
    The 1 closest matches:
    DocumentBucketAE41E5A9 :: {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Tags": [
          { ... },
          { ... },
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Component",
            "Value": "Storage-S3"
          },
    !!     Could not match arrayWith pattern 1. This is the closest match
          {
    !!       Expected BucketPurpose but received CostCenter
            "Key": "CostCenter",
    !!       Expected General but received Development
            "Value": "Development"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... }
        ]
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 180 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 181 |[39m
    [31m[1m>[22m[39m[90m 182 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::S3::Bucket'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 183 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 184 |[39m           { [33mKey[39m[33m:[39m [32m'Component'[39
m[33m,[39m [33mValue[39m[33m:[39m [32m'Storage-S3'[39m }[33m,[39m
     [90m 185 |[39m           { [33mKey[39m[33m:[39m [32m'BucketPurpose'
[39m[33m,[39m [33mValue[39m[33m:[39m [32m'General'[39m }[33m,[39m[0
m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:182:1
6)

  笳・TaggingAspect 窶ｺ S3 bucket tagging 窶ｺ should derive bucket purpose from nam
e

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::S3::Bucket, but none match as exp
ected.
    The 1 closest matches:
    ArtifactBucket7410C9EF :: {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Tags": [
          { ... },
          { ... },
    !!     Could not match arrayWith pattern 0. This is the closest match
          {
            "Key": "BucketPurpose",
    !!       Expected Artifacts but received General
            "Value": "General"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... }
        ]
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 196 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 197 |[39m
    [31m[1m>[22m[39m[90m 198 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::S3::Bucket'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 199 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 200 |[39m           { [33mKey[39m[33m:[39m [32m'BucketPurpose'
[39m[33m,[39m [33mValue[39m[33m:[39m [32m'Artifacts'[39m }[33m,[39m
     [90m 201 |[39m         ])[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:198:1
6)

  笳・TaggingAspect 窶ｺ API Gateway tagging 窶ｺ should apply API Gateway tags

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::ApiGateway::RestApi, but none mat
ch as expected.
    The 1 closest matches:
    TestApi65B47ECD :: {
      "Properties": {
        "Name": "Test API",
        "Tags": [
          { ... },
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Component",
            "Value": "API-Gateway"
          },
    !!     Could not match arrayWith pattern 1. This is the closest match
          {
    !!       Expected ApiPurpose but received CostCenter
            "Key": "CostCenter",
    !!       Expected API but received Development
            "Value": "Development"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... }
        ]
      },
      "Type": "AWS::ApiGateway::RestApi"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 283 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 284 |[39m
    [31m[1m>[22m[39m[90m 285 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::ApiGateway::RestApi'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 286 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 287 |[39m           { [33mKey[39m[33m:[39m [32m'Component'[39
m[33m,[39m [33mValue[39m[33m:[39m [32m'API-Gateway'[39m }[33m,[39m
     [90m 288 |[39m           { [33mKey[39m[33m:[39m [32m'ApiPurpose'[3
9m[33m,[39m [33mValue[39m[33m:[39m [32m'API'[39m }[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:285:1
6)

  笳・TaggingAspect 窶ｺ Step Functions tagging 窶ｺ should apply Step Functions tags

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::StepFunctions::StateMachine, but 
none match as expected.
    The 1 closest matches:
    IngestionWorkflow29B06432 :: {
      "DeletionPolicy": "Delete",
      "DependsOn": [ "IngestionWorkflowRole05E03825" ],
      "Properties": {
        "DefinitionString": "{\"StartAt\":\"PassState\",\"States\":{\"PassState
\":{\"Type\":\"Pass\",\"End\":true}}}",
        "RoleArn": { "Fn::GetAtt": [ "IngestionWorkflowRole05E03825", "Arn" ] }
,
        "Tags": [
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Component",
            "Value": "Orchestration-StepFunctions"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     Could not match arrayWith pattern 1. This is the closest match
          {
            "Key": "WorkflowPurpose",
    !!       Expected DataIngestion but received Workflow
            "Value": "Workflow"
          }
        ]
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 303 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 304 |[39m
    [31m[1m>[22m[39m[90m 305 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::StepFunctions::StateMachine'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 306 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 307 |[39m           { [33mKey[39m[33m:[39m [32m'Component'[39
m[33m,[39m [33mValue[39m[33m:[39m [32m'Orchestration-StepFunctions'[39m
 }[33m,[39m
     [90m 308 |[39m           { [33mKey[39m[33m:[39m [32m'WorkflowPurpos
e'[39m[33m,[39m [33mValue[39m[33m:[39m [32m'DataIngestion'[39m }[33m,
[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:305:1
6)

  笳・TaggingAspect 窶ｺ CloudWatch resource tagging 窶ｺ should handle Lambda log gr
oups specially

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::Logs::LogGroup, but none match as
 expected.
    The 1 closest matches:
    LambdaLogGroup2CA1C11F :: {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/MyFunction",
        "RetentionInDays": 731,
        "Tags": [
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Component",
            "Value": "Monitoring-CloudWatch"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     arrayWith pattern 1 matched here
          {
            "Key": "MonitoringType",
            "Value": "Logs"
          },
    !!     Could not match arrayWith pattern 2. This is the closest match
          {
    !!       Expected AssociatedResource but received Owner
            "Key": "Owner",
    !!       Expected MyFunction but received Platform
            "Value": "Platform"
          },
          { ... },
          { ... }
        ]
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 337 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 338 |[39m
    [31m[1m>[22m[39m[90m 339 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::Logs::LogGroup'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 340 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 341 |[39m           { [33mKey[39m[33m:[39m [32m'Component'[39
m[33m,[39m [33mValue[39m[33m:[39m [32m'Monitoring-CloudWatch'[39m }[33
m,[39m
     [90m 342 |[39m           { [33mKey[39m[33m:[39m [32m'MonitoringType
'[39m[33m,[39m [33mValue[39m[33m:[39m [32m'Logs'[39m }[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:339:1
6)

  笳・TaggingAspect 窶ｺ KMS key tagging 窶ｺ should apply KMS tags

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::KMS::Key, but none match as expec
ted.
    The 1 closest matches:
    DatabaseEncryptionKey10487C37 :: {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "Key for database encryption",
        "KeyPolicy": { ... },
        "Tags": [
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Component",
            "Value": "Security-KMS"
          },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     Could not match arrayWith pattern 1. This is the closest match
          {
            "Key": "KeyPurpose",
    !!       Expected DatabaseEncryption but received GeneralEncryption
            "Value": "GeneralEncryption"
          },
          { ... },
          { ... },
          { ... },
          { ... }
        ]
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 356 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 357 |[39m
    [31m[1m>[22m[39m[90m 358 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::KMS::Key'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 359 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 360 |[39m           { [33mKey[39m[33m:[39m [32m'Component'[39
m[33m,[39m [33mValue[39m[33m:[39m [32m'Security-KMS'[39m }[33m,[39m
     [90m 361 |[39m           { [33mKey[39m[33m:[39m [32m'KeyPurpose'[3
9m[33m,[39m [33mValue[39m[33m:[39m [32m'DatabaseEncryption'[39m }[33m,
[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:358:1
6)

  笳・TaggingAspect 窶ｺ Cognito resource tagging 窶ｺ should apply Cognito User Pool
 tags

    ReferenceError: cognito is not defined

    [0m [90m 249 |[39m
     [90m 250 |[39m     [90m// Cognito UserPool - uses UserPoolTags instead 
of Tags[39m
    [31m[1m>[22m[39m[90m 251 |[39m     [36mif[39m (resourceType [33m==
=[39m [32m'AWS::Cognito::UserPool'[39m [33m&&[39m node [36minstanceof[39
m cognito[33m.[39m[33mUserPool[39m) {
     [90m     |[39m                                                          
            [31m[1m^[22m[39m
     [90m 252 |[39m       [36mconst[39m tags [33m=[39m [36mthis[39m[33
m.[39mtagManager[33m.[39mgetTagsForResource([32m'cognito'[39m[33m,[39m c
onstructId[33m,[39m {
     [90m 253 |[39m         [33mComponent[39m[33m:[39m [32m'Security-Cog
nito'[39m[33m,[39m
     [90m 254 |[39m         [33mAuthPurpose[39m[33m:[39m [36mthis[39m[
33m.[39mresourceTypeMapper[33m.[39mgetResourcePurpose(resourceType[33m,[39
m constructId)[33m,[39m[0m

      at TaggingAspect.handleSpecialCase (src/aspects/tagging-aspect.ts:251:70)
      at TaggingAspect.visit (src/aspects/tagging-aspect.ts:63:14)
      at recurse (../node_modules/aws-cdk-lib/core/lib/private/synthesis.js:2:4
537)
      at recurse (../node_modules/aws-cdk-lib/core/lib/private/synthesis.js:2:4
772)
      at recurse (../node_modules/aws-cdk-lib/core/lib/private/synthesis.js:2:4
772)
      at invokeAspectsV2 (../node_modules/aws-cdk-lib/core/lib/private/synthesi
s.js:2:3163)
      at synthesize (../node_modules/aws-cdk-lib/core/lib/private/synthesis.js:
1:1862)
      at App.synth (../node_modules/aws-cdk-lib/core/lib/stage.js:1:2872)
      at toTemplate (../node_modules/aws-cdk-lib/assertions/lib/template.js:2:3
40)
      at Function.fromStack (../node_modules/aws-cdk-lib/assertions/lib/templat
e.js:1:1663)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:374:3
3)

  笳・TaggingAspect 窶ｺ IAM resource tagging 窶ｺ should apply basic tags to IAM rol
es

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::IAM::Role, but none match as expe
cted.
    The 1 closest matches:
    TestRole6C9272DF :: {
      "Properties": {
        "AssumeRolePolicyDocument": { ... },
        "Tags": [
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Project",
            "Value": "AiAgentSystem"
          }
    !!     Could not match arrayWith pattern 1. No more elements to try
          
        ]
      },
      "Type": "AWS::IAM::Role"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 392 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 393 |[39m
    [31m[1m>[22m[39m[90m 394 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::IAM::Role'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 395 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 396 |[39m           { [33mKey[39m[33m:[39m [32m'Project'[39m
[33m,[39m [33mValue[39m[33m:[39m [32m'AiAgentSystem'[39m }[33m,[39m
     [90m 397 |[39m           { [33mKey[39m[33m:[39m [32m'ManagedBy'[39
m[33m,[39m [33mValue[39m[33m:[39m [32m'CDK'[39m }[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:394:1
6)

  笳・TaggingAspect 窶ｺ special case handling 窶ｺ should handle Lambda log groups w
ith associated resource tag

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::Logs::LogGroup, but none match as
 expected.
    The 1 closest matches:
    LambdaLogs02F6D053 :: {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/TestFunction",
        "RetentionInDays": 731,
        "Tags": [
    !!     Could not match arrayWith pattern 0. This is the closest match
          {
    !!       Expected AssociatedResource but received AutoShutdown
            "Key": "AutoShutdown",
    !!       Expected TestFunction but received true
            "Value": "true"
          },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... }
        ]
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 428 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 429 |[39m
    [31m[1m>[22m[39m[90m 430 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::Logs::LogGroup'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 431 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 432 |[39m           { [33mKey[39m[33m:[39m [32m'AssociatedReso
urce'[39m[33m,[39m [33mValue[39m[33m:[39m [32m'TestFunction'[39m }[33
m,[39m
     [90m 433 |[39m         ])[33m,[39m[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:430:1
6)

  笳・TaggingAspect 窶ｺ environment-specific tags 窶ｺ should apply dev environment 
tags

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::Lambda::Function, but none match 
as expected.
    The 1 closest matches:
    DevFunctionAEF03454 :: {
      "DependsOn": [ "DevFunctionServiceRoleDB76C292" ],
      "Properties": {
        "Code": { "ZipFile": "exports.handler = async () => {};" },
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt": [ "DevFunctionServiceRoleDB76C292", "Arn" ] },
        "Runtime": "nodejs18.x",
        "Tags": [
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Stage",
            "Value": "dev"
          }
    !!     Could not match arrayWith pattern 1. No more elements to try
          
        ]
      },
      "Type": "AWS::Lambda::Function"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 451 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(stack)[33m;[39m
     [90m 452 |[39m
    [31m[1m>[22m[39m[90m 453 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::Lambda::Function'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 454 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 455 |[39m           { [33mKey[39m[33m:[39m [32m'Stage'[39m[3
3m,[39m [33mValue[39m[33m:[39m [32m'dev'[39m }[33m,[39m
     [90m 456 |[39m           { [33mKey[39m[33m:[39m [32m'Environment'[
39m[33m,[39m [33mValue[39m[33m:[39m [32m'Development'[39m }[33m,[39m
[0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:453:1
6)

  笳・TaggingAspect 窶ｺ environment-specific tags 窶ｺ should apply production envir
onment tags

    Expected value   undefined
    Received:
      undefined

    Message:
      Template has 1 resources with type AWS::Lambda::Function, but none match 
as expected.
    The 1 closest matches:
    ProdFunction6C1E4832 :: {
      "DependsOn": [ "ProdFunctionServiceRole0D31D266" ],
      "Properties": {
        "Code": { "ZipFile": "exports.handler = async () => {};" },
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt": [ "ProdFunctionServiceRole0D31D266", "Arn" ] },
        "Runtime": "nodejs18.x",
        "Tags": [
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
          { ... },
    !!     arrayWith pattern 0 matched here
          {
            "Key": "Stage",
            "Value": "production"
          }
    !!     Could not match arrayWith pattern 1. No more elements to try
          
        ]
      },
      "Type": "AWS::Lambda::Function"
    }

    Difference:

    Compared values have no visual difference.

    [0m [90m 475 |[39m       [36mconst[39m template [33m=[39m [33mTempl
ate[39m[33m.[39mfromStack(prodStack)[33m;[39m
     [90m 476 |[39m
    [31m[1m>[22m[39m[90m 477 |[39m       template[33m.[39mhasResourcePr
operties([32m'AWS::Lambda::Function'[39m[33m,[39m {
     [90m     |[39m                [31m[1m^[22m[39m
     [90m 478 |[39m         [33mTags[39m[33m:[39m [33mMatch[39m[33m.[
39marrayWith([
     [90m 479 |[39m           { [33mKey[39m[33m:[39m [32m'Stage'[39m[3
3m,[39m [33mValue[39m[33m:[39m [32m'production'[39m }[33m,[39m
     [90m 480 |[39m           { [33mKey[39m[33m:[39m [32m'Environment'[
39m[33m,[39m [33mValue[39m[33m:[39m [32m'Production'[39m }[33m,[39m[
0m

      at Template.hasResourceProperties (../node_modules/aws-cdk-lib/assertions
/lib/template.js:1:3216)
      at Object.<anonymous> (src/aspects/__tests__/tagging-aspect.test.ts:477:1
6)

Test Suites: 1 failed, 1 total
Tests:       16 failed, 10 passed, 26 total
Snapshots:   0 total
Time:        9.613 s
Ran all test suites matching /tagging-aspect.test.ts/i.
npm ERR! Lifecycle script `test` failed with error: 
npm ERR! Error: command failed 
npm ERR!   in workspace: ai-agent-infrastructure@1.0.0 
npm ERR!   at location: D:\workspace\AIAgentSample\infrastructure 
